/*
 * Telstra Messaging API
 *  The Telstra SMS Messaging API allows your applications to send and receive SMS text messages from Australia's leading network operator.  It also allows your application to track the delivery status of both sent and received SMS messages. 
 *
 * OpenAPI spec version: 2.2.4
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.telstra.messaging;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Poll for incoming messages returning the latest. Only works if no callback url was specified when provisioning a number.
 */
@ApiModel(description = "Poll for incoming messages returning the latest. Only works if no callback url was specified when provisioning a number.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-02-06T12:04:52.962+11:00")
public class InboundPollResponse {
  @SerializedName("to")
  private String to = null;

  @SerializedName("from")
  private String from = null;

  @SerializedName("body")
  private String body = null;

  @SerializedName("receivedTimestamp")
  private String receivedTimestamp = null;

  @SerializedName("moreMessages")
  private Integer moreMessages = null;

  @SerializedName("messageId")
  private String messageId = null;

  public InboundPollResponse to(String to) {
    this.to = to;
    return this;
  }

   /**
   * The phone number (recipient) that the message was sent to(in E.164 format).
   * @return to
  **/
  @ApiModelProperty(value = "The phone number (recipient) that the message was sent to(in E.164 format).")
  public String getTo() {
    return to;
  }

  public void setTo(String to) {
    this.to = to;
  }

  public InboundPollResponse from(String from) {
    this.from = from;
    return this;
  }

   /**
   * The phone number (sender) that the message was sent from (in E.164 format).
   * @return from
  **/
  @ApiModelProperty(value = "The phone number (sender) that the message was sent from (in E.164 format).")
  public String getFrom() {
    return from;
  }

  public void setFrom(String from) {
    this.from = from;
  }

  public InboundPollResponse body(String body) {
    this.body = body;
    return this;
  }

   /**
   * Text body of the message that was sent
   * @return body
  **/
  @ApiModelProperty(value = "Text body of the message that was sent")
  public String getBody() {
    return body;
  }

  public void setBody(String body) {
    this.body = body;
  }

  public InboundPollResponse receivedTimestamp(String receivedTimestamp) {
    this.receivedTimestamp = receivedTimestamp;
    return this;
  }

   /**
   * The date and time when the message was recieved by recipient.
   * @return receivedTimestamp
  **/
  @ApiModelProperty(value = "The date and time when the message was recieved by recipient.")
  public String getReceivedTimestamp() {
    return receivedTimestamp;
  }

  public void setReceivedTimestamp(String receivedTimestamp) {
    this.receivedTimestamp = receivedTimestamp;
  }

  public InboundPollResponse moreMessages(Integer moreMessages) {
    this.moreMessages = moreMessages;
    return this;
  }

   /**
   * Indicates if there are more messages that can be polled from the server. 0&#x3D;No more messages available. Anything else indicates there are more messages on the server.
   * @return moreMessages
  **/
  @ApiModelProperty(value = "Indicates if there are more messages that can be polled from the server. 0=No more messages available. Anything else indicates there are more messages on the server.")
  public Integer getMoreMessages() {
    return moreMessages;
  }

  public void setMoreMessages(Integer moreMessages) {
    this.moreMessages = moreMessages;
  }

  public InboundPollResponse messageId(String messageId) {
    this.messageId = messageId;
    return this;
  }

   /**
   * Optional message ID of the SMS you sent. Use this ID to view the message status or get responses.
   * @return messageId
  **/
  @ApiModelProperty(value = "Optional message ID of the SMS you sent. Use this ID to view the message status or get responses.")
  public String getMessageId() {
    return messageId;
  }

  public void setMessageId(String messageId) {
    this.messageId = messageId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InboundPollResponse inboundPollResponse = (InboundPollResponse) o;
    return Objects.equals(this.to, inboundPollResponse.to) &&
        Objects.equals(this.from, inboundPollResponse.from) &&
        Objects.equals(this.body, inboundPollResponse.body) &&
        Objects.equals(this.receivedTimestamp, inboundPollResponse.receivedTimestamp) &&
        Objects.equals(this.moreMessages, inboundPollResponse.moreMessages) &&
        Objects.equals(this.messageId, inboundPollResponse.messageId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(to, from, body, receivedTimestamp, moreMessages, messageId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InboundPollResponse {\n");
    
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    receivedTimestamp: ").append(toIndentedString(receivedTimestamp)).append("\n");
    sb.append("    moreMessages: ").append(toIndentedString(moreMessages)).append("\n");
    sb.append("    messageId: ").append(toIndentedString(messageId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

