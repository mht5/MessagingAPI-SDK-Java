/*
 * Telstra Messaging API
 *  The Telstra SMS Messaging API allows your applications to send and receive SMS text messages from Australia's leading network operator.  It also allows your application to track the delivery status of both sent and received SMS messages. 
 *
 * OpenAPI spec version: 2.2.5
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.telstra.messaging;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * DeleteNumberRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-03-08T00:36:43.245Z")
public class DeleteNumberRequest {
  @SerializedName("emptyArr")
  private Integer emptyArr = 0;

  public DeleteNumberRequest emptyArr(Integer emptyArr) {
    this.emptyArr = emptyArr;
    return this;
  }

   /**
   * Empty Arr
   * @return emptyArr
  **/
  @ApiModelProperty(value = "Empty Arr")
  public Integer getEmptyArr() {
    return emptyArr;
  }

  public void setEmptyArr(Integer emptyArr) {
    this.emptyArr = emptyArr;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeleteNumberRequest deleteNumberRequest = (DeleteNumberRequest) o;
    return Objects.equals(this.emptyArr, deleteNumberRequest.emptyArr);
  }

  @Override
  public int hashCode() {
    return Objects.hash(emptyArr);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeleteNumberRequest {\n");
    
    sb.append("    emptyArr: ").append(toIndentedString(emptyArr)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

